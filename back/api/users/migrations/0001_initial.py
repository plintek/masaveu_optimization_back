# Generated by Django 4.2.7 on 2023-12-02 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='awards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='awards_images/', verbose_name='image')),
            ],
            options={
                'verbose_name': 'awards',
                'verbose_name_plural': 'awards',
            },
        ),
        migrations.CreateModel(
            name='level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='level_images/', verbose_name='image')),
                ('experience', models.IntegerField(default=0, verbose_name='experience')),
                ('experience_to_next_level', models.IntegerField(default=0, verbose_name='experience to next level')),
            ],
            options={
                'verbose_name': 'level',
                'verbose_name_plural': 'levels',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('password', models.CharField(max_length=100, verbose_name='password')),
                ('role', models.CharField(blank=True, max_length=30, verbose_name='role')),
                ('description', models.CharField(blank=True, max_length=500, verbose_name='description')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='profile picture')),
                ('capture_count', models.IntegerField(default=0, verbose_name='capture count')),
                ('followers_count', models.IntegerField(default=0, verbose_name='followers count')),
                ('following_count', models.IntegerField(default=0, verbose_name='following count')),
                ('private', models.BooleanField(default=False, verbose_name='private')),
                ('reports_count', models.IntegerField(default=0, verbose_name='reports count')),
                ('blocked', models.ManyToManyField(blank=True, related_name='blocked_set', to=settings.AUTH_USER_MODEL, verbose_name='blocked')),
                ('followers', models.ManyToManyField(blank=True, related_name='followers_set', to=settings.AUTH_USER_MODEL, verbose_name='followers')),
                ('following', models.ManyToManyField(blank=True, related_name='following_set', to=settings.AUTH_USER_MODEL, verbose_name='following')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.level', verbose_name='level')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
